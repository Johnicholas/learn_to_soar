# this is a soar component for computing the length of a linear, lisp-ish list
#
# in prolog, this might look like:
#
# % my_length(+List, -Peano)
# my_length(nil, Out) :- !, Out = z.
# my_length(cons(_X, X), Out) :- !, my_length(Xs, R), Out = s(R).
#
# in haskell, this might look like:
#
# data Peano = Z | S( Peano )
# data List a = Nil | Cons( a, List a )
#
# my_length :: List a -> Peano
# my_length Nil = Z
# my_length (Cons _ xs) = S (my_length xs)

sp {length*initialize
    (state <s> ^attribute operator
               ^impasse no-change
               ^superstate <ss>)
    (<ss> ^operator <o>)
    (<o> ^name length
         ^list <l>
         ^return-to <return-to>)
-->
    (<s> ^name length
         ^list <l>
         ^return-to <return-to>)}
         
sp {length*propose*base-case-nil
    (state <s> ^name length ^list nil)
-->
    (<s> ^operator <o>)
    (<o> ^name base-case-nil)}

sp {length*apply*base-case-nil
    (state <s> ^name length
               ^return-to <return-to>
               ^superstate <ss>
               ^operator <o>)
    (<o> ^name base-case-nil)
-->
    (<ss> ^<return-to> z)}

sp {length*propose*recurse
    (state <s> ^name length
               ^list {<> nil <l>}
               -^recursion-result)
    (<l> ^first <x> ^rest <xs>)
-->
    (<s> ^operator <o>)
    (<o> ^name length ^list <xs> ^return-to recursion-result)}

sp {length*propose*inductive-case
    (state <s> ^name length
               ^recursion-result <answer>)
-->
    (<s> ^operator <o>)
    (<o> ^name inductive-case)}

sp {length*apply*inductive-case
    (state <s> ^name length
               ^recursion-result <answer>
               ^return-to <return-to>
               ^superstate <ss>
               ^operator <o>)
    (<o> ^name inductive-case)
-->
    (<ss> ^<return-to> <successor>)
    (<successor> ^s <answer>)} 

################################################################
# snip here - test-only stuffs below    
sp {initialize
    (state <s> ^superstate nil)
-->
    (<s> ^name test-length)}

## first test
#sp {propose*length-of-nil-is-zero
#    (state <s> ^name test-length)
#-->
#    (<s> ^operator <o>)
#    (<o> ^name length
#         ^list nil
#         ^return-to length-of-nil-is)}
#
#sp {pass
#    (state <s> ^name test-length ^length-of-nil-is z)
#-->
#    (write (crlf) |pass|)
#    (halt)}

# second test
sp {propose*length-of-abc-is-three
    (state <s> ^name test-length)
-->
    (<s> ^operator <o>)
    (<o> ^name length
         ^list <abc>
         ^return-to length-of-abc-is)
    (<abc> ^first a ^rest <bc>)
    (<bc> ^first b ^rest <c>)
    (<c> ^first c ^rest nil)}
         

sp {pass
    (state <s> ^name test-length ^length-of-abc-is.s.s.s z)
-->
    (write (crlf) |pass|)
    (halt)}

