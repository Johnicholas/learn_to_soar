setup {

source validity.soar

sp {initialize
  (state <s> ^superstate nil)
-->
  (<s> ^name validity-test)}

}

test "var(x) should be invalid" {

sp {propose*validity
  (state <s> ^name validity-test)
-->
  (<s> ^operator <o> +)
  (<o> ^name validity ^exp.var x ^env empty ^todo done ^desired false)}

sp {pass
  (state <s> ^name validity-test ^validity-done.bind <env>)
  (<env> ^key x ^value false ^env empty)
-->
  (pass)}

}

test "and(var(x), var(x)) should be invalid" {

sp {propose*validity
  (state <s> ^name validity-test)
-->
  (<s> ^operator <o> +)
  (<o> ^name validity ^exp.and <and> ^env empty ^todo done ^desired false)
  (<and> ^p.var x ^q.var x)}

sp {pass
  (state <s> ^name validity-test ^validity-done.bind <env>)
  (<env> ^key x ^value false ^env empty)
-->
  (pass)}

}

test "and(var(x), var(y)) should be invalid" {

sp {propose*validity
  (state <s> ^name validity-test)
-->
  (<s> ^operator <o> +)
  (<o> ^name validity ^exp.and <and> ^env empty ^todo done ^desired false)
  (<and> ^p.var x ^q.var y)}

sp {pass
  (state <s> ^name validity-test ^validity-done.bind <env>)
  (<env> ^key x ^value false ^env empty)
-->
  (pass)}

}

test "or(var(x), var(x)) should be invalid" {

sp {propose*validity
  (state <s> ^name validity-test)
-->
  (<s> ^operator <o> +)
  (<o> ^name validity ^exp.or <or> ^env empty ^todo done ^desired false)
  (<or> ^p.var x ^q.var x)}

sp {pass
  (state <s> ^name validity-test ^validity-done.bind <env>)
  (<env> ^key x ^value false ^env empty)
-->
  (pass)}

}

#  assert(test(OR(VAR("p"), VAR("p"))) == false);
#  assert(test(OR(VAR("p"), VAR("q"))) == false);
#  assert(test(OR(NOT(VAR("p")), VAR("q"))) == false);
#  assert(test(OR(NOT(VAR("p")), VAR("p"))) == true);
#  assert(test(OR(NOT(OR(VAR("p"), VAR("q"))),
#		 OR(NOT(AND(OR(NOT(VAR("p")),
#			       VAR("r")),
#			    OR(NOT(VAR("q")),
#			       VAR("r")))),
#		    VAR("r")))) == true);
#  assert(test(OR(NOT(OR(VAR("x"), VAR("q"))),
#		 OR(NOT(AND(OR(NOT(VAR("p")),
#			       VAR("r")),
#			    OR(NOT(VAR("q")),
#			       VAR("r")))),
#		    VAR("r"
#			))))
#	 == false);
#  assert(test(OR(NOT(OR(VAR("p"), VAR("x"))),
#		 OR(NOT(AND(OR(NOT(VAR("p")),
#			       VAR("r")),
#			    OR(NOT(VAR("q")),
#			       VAR("r")))),
#		    VAR("r")))) == false);
#  assert(test(OR(NOT(OR(VAR("p"), VAR("q"))),
#		 OR(NOT(AND(OR(NOT(VAR("x")),
#			       VAR("r")),
#			    OR(NOT(VAR("q")),
#			       VAR("r")))),
#		    VAR("r")))) == false);
#  assert(test(OR(NOT(OR(VAR("p"), VAR("q"))),
#		 OR(NOT(AND(OR(NOT(VAR("p")),
#			       VAR("x")),
#			    OR(NOT(VAR("q")),
#			       VAR("r")))),
#		    VAR("r")))) == false);
#  assert(test(OR(NOT(OR(VAR("p"), VAR("q"))),
#		 OR(NOT(AND(OR(NOT(VAR("p")),
#			       VAR("r")),
#			    OR(NOT(VAR("x")),
#			       VAR("r")))),
#		    VAR("r")))) == false);
#  assert(test(OR(NOT(OR(VAR("p"), VAR("q"))),
#		 OR(NOT(AND(OR(NOT(VAR("p")),
#			       VAR("r")),
#			    OR(NOT(VAR("q")),
#			       VAR("x")))),
#		    VAR("r")))) == false);
#  assert(test(OR(NOT(OR(VAR("p"), VAR("q"))),
#		 OR(NOT(AND(OR(NOT(VAR("p")),
#			       VAR("r")),
#			    OR(NOT(VAR("q")),
#			       VAR("r")))),
#		    VAR("x")))) == false);

