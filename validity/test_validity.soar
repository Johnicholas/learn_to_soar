setup {

source validity.soar

sp {initialize
  (state <s> ^superstate nil)
-->
  (<s> ^name validity-test)}

}

test "var(x) should be invalid" {

sp {propose*validity
  (state <s> ^name validity-test)
-->
  (<s> ^operator <o> +)
  (<o> ^name validity ^exp.var x ^env empty ^todo done ^desired false)}

sp {pass
  (state <s> ^name validity-test ^validity-done <env>)
  (<env> ^key x ^value false ^env empty)
-->
  (pass)}

}

test "and(var(x), var(x)) should be invalid" {

sp {propose*validity
  (state <s> ^name validity-test)
-->
  (<s> ^operator <o> +)
  (<o> ^name validity ^exp.and <and> ^env empty ^todo done ^desired false)
  (<and> ^p.var x ^q.var x)}

sp {pass
  (state <s> ^name validity-test ^validity-done <env>)
  (<env> ^key x ^value false ^env empty)
-->
  (pass)}

}

test "and(var(x), var(y)) should be invalid" {

sp {propose*validity
  (state <s> ^name validity-test)
-->
  (<s> ^operator <o> +)
  (<o> ^name validity ^exp.and <and> ^env empty ^todo done ^desired false)
  (<and> ^p.var x ^q.var y)}

sp {pass
  (state <s> ^name validity-test ^validity-done <env>)
  (<env> ^key x ^value false ^env empty)
-->
  (pass)}

}

test "or(var(x), var(x)) should be invalid" {

sp {propose*validity
  (state <s> ^name validity-test)
-->
  (<s> ^operator <o> +)
  (<o> ^name validity ^exp.or <or> ^env empty ^todo done ^desired false)
  (<or> ^p.var x ^q.var x)}

sp {pass
  (state <s> ^name validity-test ^validity-done <env>)
  (<env> ^key x ^value false ^env empty)
-->
  (pass)}

}

test "or(var(x), var(y)) should be invalid" {

sp {propose*validity
  (state <s> ^name validity-test)
-->
  (<s> ^operator <o> +)
  (<o> ^name validity ^exp.or <or> ^env empty ^todo done ^desired false)
  (<or> ^p.var x ^q.var y)}

sp {pass
  (state <s> ^name validity-test ^validity-done <env1>)
  (<env1> ^key y ^value false ^env <env2>)
  (<env2> ^key x ^value false ^env empty)
-->
  (pass)}

}

test "or(not(var(x)), var(y)) should be invalid" {

sp {propose*validity
  (state <s> ^name validity-test)
-->
  (<s> ^operator <o> +)
  (<o> ^name validity ^exp.or <or> ^env empty ^todo done ^desired false)
  (<or> ^p.not.var x ^q.var y)}

sp {pass
  (state <s> ^name validity-test ^validity-done <env1>)
  (<env1> ^key y ^value false ^env <env2>)
  (<env2> ^key x ^value true ^env empty)
-->
  (pass)}

}

test "or(not(var(x)), var(x)) should be valid" {

sp {propose*validity
  (state <s> ^name validity-test)
-->
  (<s> ^operator <o> +)
  (<o> ^name validity ^exp.or <or> ^env empty ^todo done ^desired false)
  (<or> ^p.not.var x ^q.var x)}

sp {pass
  (state <s> ^name validity-test ^validity-done empty)
-->
  (pass)}

}

test "a complicated expression that should be valid" {

sp {propose*validity
  (state <s> ^name validity-test)
-->
  (<s> ^operator <o> +)
  (<o> ^name validity ^exp.or <or1> ^env empty ^todo done ^desired false)
  (<or1> ^p.not.or <or2> ^q.or <or3>)
  (<or2> ^p.var p ^q.var q)
  (<or3> ^p.not.and <and4> ^q.var r)
  (<and4> ^p.or <or6> ^q.or <or7>)
  (<or6> ^p.not.var p ^q.var r)
  (<or7> ^p.not.var q ^q.var r)}

sp {pass
  (state <s> ^name validity-test ^validity-done empty)
-->
  (pass)}

}

test "a complicated expression that should not be valid, 1" {

sp {propose*validity
  (state <s> ^name validity-test)
-->
  (<s> ^operator <o> +)
  (<o> ^name validity ^exp.or <or1> ^env empty ^todo done ^desired false)
  (<or1> ^p.not.or <or2> ^q.or <or3>)
  (<or2> ^p.var x ^q.var q)
  (<or3> ^p.not.and <and4> ^q.var r)
  (<and4> ^p.or <or6> ^q.or <or7>)
  (<or6> ^p.not.var p ^q.var r)
  (<or7> ^p.not.var q ^q.var r)}

sp {pass
  (state <s> ^name validity-test ^validity-done <env1>)
  (<env1> ^key r ^value false ^env <env2>)
  (<env2> ^key q ^value false ^env <env3>)
  (<env3> ^key p ^value false ^env <env4>)
  (<env4> ^key x ^value true ^env empty)
-->
  (pass)}

}

test "a complicated expression that should not be valid, 2" {

sp {propose*validity
  (state <s> ^name validity-test)
-->
  (<s> ^operator <o> +)
  (<o> ^name validity ^exp.or <or1> ^env empty ^todo done ^desired false)
  (<or1> ^p.not.or <or2> ^q.or <or3>)
  (<or2> ^p.var p ^q.var x)
  (<or3> ^p.not.and <and4> ^q.var r)
  (<and4> ^p.or <or6> ^q.or <or7>)
  (<or6> ^p.not.var p ^q.var r)
  (<or7> ^p.not.var q ^q.var r)}

sp {pass
  (state <s> ^name validity-test ^validity-done <env1>)
  (<env1> ^key r ^value false ^env <env2>)
  (<env2> ^key q ^value false ^env <env3>)
  (<env3> ^key p ^value false ^env <env4>)
  (<env4> ^key x ^value true ^env empty)
-->
  (pass)}

}

test "a complicated expression that should not be valid, 3" {

sp {propose*validity
  (state <s> ^name validity-test)
-->
  (<s> ^operator <o> +)
  (<o> ^name validity ^exp.or <or1> ^env empty ^todo done ^desired false)
  (<or1> ^p.not.or <or2> ^q.or <or3>)
  (<or2> ^p.var p ^q.var q)
  (<or3> ^p.not.and <and4> ^q.var r)
  (<and4> ^p.or <or6> ^q.or <or7>)
  (<or6> ^p.not.var x ^q.var r)
  (<or7> ^p.not.var q ^q.var r)}

sp {pass
  (state <s> ^name validity-test ^validity-done <env1>)
  (<env1> ^key r ^value false ^env <env2>)
  (<env2> ^key q ^value false ^env <env3>)
  (<env3> ^key x ^value false ^env <env4>)
  (<env4> ^key p ^value true ^env empty)
-->
  (pass)}

}

test "a complicated expression that should not be valid, 4" {

sp {propose*validity
  (state <s> ^name validity-test)
-->
  (<s> ^operator <o> +)
  (<o> ^name validity ^exp.or <or1> ^env empty ^todo done ^desired false)
  (<or1> ^p.not.or <or2> ^q.or <or3>)
  (<or2> ^p.var p ^q.var q)
  (<or3> ^p.not.and <and4> ^q.var r)
  (<and4> ^p.or <or6> ^q.or <or7>)
  (<or6> ^p.not.var p ^q.var x)
  (<or7> ^p.not.var q ^q.var r)}

sp {pass
  (state <s> ^name validity-test ^validity-done <env1>)
  (<env1> ^key r ^value false ^env <env2>)
  (<env2> ^key q ^value false ^env <env3>)
  (<env3> ^key x ^value true ^env <env4>)
  (<env4> ^key p ^value true ^env empty)
-->
  (pass)}

}

test "a complicated expression that should not be valid, 5" {

sp {propose*validity
  (state <s> ^name validity-test)
-->
  (<s> ^operator <o> +)
  (<o> ^name validity ^exp.or <or1> ^env empty ^todo done ^desired false)
  (<or1> ^p.not.or <or2> ^q.or <or3>)
  (<or2> ^p.var p ^q.var q)
  (<or3> ^p.not.and <and4> ^q.var r)
  (<and4> ^p.or <or6> ^q.or <or7>)
  (<or6> ^p.not.var p ^q.var r)
  (<or7> ^p.not.var x ^q.var r)}

sp {pass
  (state <s> ^name validity-test ^validity-done <env1>)
  (<env1> ^key r ^value false ^env <env2>)
  (<env2> ^key x ^value false ^env <env3>)
  (<env3> ^key p ^value false ^env <env4>)
  (<env4> ^key q ^value true ^env empty)
-->
  (pass)}

}

test "a complicated expression that should not be valid, 6" {

sp {propose*validity
  (state <s> ^name validity-test)
-->
  (<s> ^operator <o> +)
  (<o> ^name validity ^exp.or <or1> ^env empty ^todo done ^desired false)
  (<or1> ^p.not.or <or2> ^q.or <or3>)
  (<or2> ^p.var p ^q.var q)
  (<or3> ^p.not.and <and4> ^q.var r)
  (<and4> ^p.or <or6> ^q.or <or7>)
  (<or6> ^p.not.var p ^q.var r)
  (<or7> ^p.not.var q ^q.var x)}

sp {pass
  (state <s> ^name validity-test ^validity-done <env1>)
  (<env1> ^key r ^value false ^env <env2>)
  (<env2> ^key x ^value true ^env <env3>)
  (<env3> ^key p ^value false ^env <env4>)
  (<env4> ^key q ^value true ^env empty)
-->
  (pass)}

}

test "a complicated expression that should not be valid, 7" {

sp {propose*validity
  (state <s> ^name validity-test)
-->
  (<s> ^operator <o> +)
  (<o> ^name validity ^exp.or <or1> ^env empty ^todo done ^desired false)
  (<or1> ^p.not.or <or2> ^q.or <or3>)
  (<or2> ^p.var p ^q.var q)
  (<or3> ^p.not.and <and4> ^q.var x)
  (<and4> ^p.or <or6> ^q.or <or7>)
  (<or6> ^p.not.var p ^q.var r)
  (<or7> ^p.not.var q ^q.var r)}

sp {pass
  (state <s> ^name validity-test ^validity-done <env1>)
  (<env1> ^key x ^value false ^env <env2>)
  (<env2> ^key q ^value false ^env <env3>)
  (<env3> ^key r ^value true ^env <env4>)
  (<env4> ^key p ^value true ^env empty)
-->
  (pass)}

}

