# These are a set of productions that do a pattern of "three inserts and two deletes followed by find-min"
# They depend on a context that sets up ^first-test ^second-test and ^third-test augmentations on the state.

sp {propose*empty
    (state <s> ^name test-skew-binomial-heap -^empty-heap-is)
-->
    (<s> ^operator <o> + =)
    (<o> ^name empty-heap ^return-to empty-heap-is)}

sp {propose*create-test-cases
    (state <s> ^name test-skew-binomial-heap -^first-test)
-->
    (<s> ^operator <o> + =)
    (<o> ^name create-test-cases)}

sp {propose*insert-heap*step-one
    (state <s> ^name test-skew-binomial-heap ^empty-heap-is <e> ^first-test <t1> -^step-one-is)
-->
    (<s> ^operator <o>)
    (<o> ^name insert-heap ^element <t1> ^heap <e> ^return-to step-one-is)}

sp {propose*insert-heap*step-two
    (state <s> ^name test-skew-binomial-heap ^step-one-is <h1> ^second-test <t2> -^step-two-is)
-->
    (<s> ^operator <o>)
    (<o> ^name insert-heap ^element <t2> ^heap <h1> ^return-to step-two-is)}

sp {propose*insert-heap*step-three
    (state <s> ^name test-skew-binomial-heap ^step-two-is <h2> ^third-test <t3> -^step-three-is)
-->
    (<s> ^operator <o>)
    (<o> ^name insert-heap ^element <t3> ^heap <h2> ^return-to step-three-is)}

sp {propose*insert-heap*step-four
    (state <s> ^name test-skew-binomial-heap ^step-three-is <h> ^fourth-test <t> -^step-four-is)
-->
    (<s> ^operator <o>)
    (<o> ^name insert-heap ^element <t> ^heap <h> ^return-to step-four-is)}

sp {propose*delete-min*step-five
    (state <s> ^name test-skew-binomial-heap ^step-four-is <h2> -^step-five-is)
-->
    (<s> ^operator <o>)
    (<o> ^name delete-min ^heap <h2> ^return-to step-five-is)}

sp {propose*find-min*step-six
    (state <s> ^name test-skew-binomial-heap ^step-five-is <h1> -^step-six-is)
-->
    (<s> ^operator <o>)
    (<o> ^name find-min ^heap <h1> ^return-to answer-is)}


